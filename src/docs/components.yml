components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lost:
          type: number
        won:
          type: number
        succes_rate:
          type: number
        games:
          type: array
      example:
        id: 5ebac534954b54139806c112
        name: fake name
        lost: 0
        won: 0
        succes_rate: 0
        games: []

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    RankingUser:
      type: object
      properties:
        name:
          type: string
        succes_rate:
          type: number
      example:
        name: fake name
        succes_rate: 0.3
            



    Game:
      typ: object
      properties:
        dice1: 
          type: number
        dice2: 
          type: number
        succes_rate: 
          type: number
        result:
          type: string
      example:
        dice1: 2
        dice2: 3
        succes_rate: 0
        result: 'You lost'

  responses:
    DuplicateName:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: User already exists
    InexistentName:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: User doesn't exsist
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
